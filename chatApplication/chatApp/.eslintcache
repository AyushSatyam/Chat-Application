[{"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\index.js":"1","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\reportWebVitals.js":"2","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\App.js":"3","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\configureStore.js":"4","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\actions\\authActions.js":"5","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\pages\\Auth.js":"6","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\actions\\chatActions.js":"7","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\pages\\Messenger.js":"8","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\reducers\\index.js":"9","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\Signup.js":"10","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\ThreadView.js":"11","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\ChatInput.js":"12","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\Sidebar.js":"13","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\Login.js":"14","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\reducers\\authReducer.js":"15","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\reducers\\chatReducer.js":"16"},{"size":787,"mtime":1607012014693,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":2534,"mtime":1607526245735,"results":"20","hashOfConfig":"18"},{"size":554,"mtime":1607011972678,"results":"21","hashOfConfig":"18"},{"size":260,"mtime":1607272585149,"results":"22","hashOfConfig":"18"},{"size":611,"mtime":1607142807130,"results":"23","hashOfConfig":"18"},{"size":1425,"mtime":1607529589231,"results":"24","hashOfConfig":"18"},{"size":710,"mtime":1607316296084,"results":"25","hashOfConfig":"18"},{"size":163,"mtime":1607012999044,"results":"26","hashOfConfig":"18"},{"size":4994,"mtime":1607270851869,"results":"27","hashOfConfig":"18"},{"size":1107,"mtime":1607525426120,"results":"28","hashOfConfig":"18"},{"size":829,"mtime":1607316609481,"results":"29","hashOfConfig":"18"},{"size":2632,"mtime":1607524349718,"results":"30","hashOfConfig":"18"},{"size":2492,"mtime":1607161383233,"results":"31","hashOfConfig":"18"},{"size":453,"mtime":1607313752949,"results":"32","hashOfConfig":"18"},{"size":909,"mtime":1607529399770,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1oh4z37",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\index.js",[],["70","71"],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\reportWebVitals.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\App.js",["72"],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\configureStore.js",["73"],"import { applyMiddleware, createStore } from \"redux\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./reducers\";\r\nconst persistConfug = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfug, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  let persistor = persistStore(store);\r\n  return {\r\n    store,\r\n    persistor,\r\n  };\r\n};\r\n","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\actions\\authActions.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\pages\\Auth.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\actions\\chatActions.js",["74"],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\pages\\Messenger.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\reducers\\index.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\Signup.js",["75"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordAgain: \"\",\r\n      name: \"\",\r\n      username: \"\",\r\n      error: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-wrapper\">\r\n              <h1>Partials Signup</h1>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  if (this.props.socket) {\r\n                    let empty = 0;\r\n                    Object.keys(this.state).map((key) => {\r\n                      if (this.state[key] === \"\") {\r\n                        empty += 1;\r\n                      }\r\n                    });\r\n                    if (empty > 0) {\r\n                      return this.setState({\r\n                        error: \"All Fields are Required\",\r\n                      });\r\n                    } else {\r\n                      if (this.state.password !== this.state.passwordAgain) {\r\n                        return this.setState({ error: \"Passwords Must Match\" });\r\n                      }\r\n                    }\r\n                    this.props.socket.send(\r\n                      JSON.stringify({\r\n                        type: \"SIGNUP\",\r\n                        data: {\r\n                          email: this.state.email,\r\n                          password: this.state.password,\r\n                          name: this.state.name,\r\n                          username: this.state.username,\r\n                        },\r\n                      })\r\n                    );\r\n                  }\r\n                }}\r\n              >\r\n                {this.state.error ? (\r\n                  <p className=\"text-danger\">{this.state.error}</p>\r\n                ) : // console.error()\r\n                null}\r\n                <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Please enter your name...\"\r\n                    value={this.state.name}\r\n                    onChange={(e) => this.setState({ name: e.target.value })}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Please enter your Username...\"\r\n                    value={this.state.username}\r\n                    onChange={(e) =>\r\n                      this.setState({ username: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Please enter your email...\"\r\n                    value={this.state.email}\r\n                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Please enter your password...\"\r\n                    value={this.state.password}\r\n                    onChange={(e) =>\r\n                      this.setState({ password: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Password Again</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Please re-enter your password...\"\r\n                    value={this.state.passwordAgain}\r\n                    onChange={(e) =>\r\n                      this.setState({ passwordAgain: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Signup\r\n                  </button>\r\n                  <p>\r\n                    Already have an account?<Link to=\"/login\">Login</Link>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state.auth,\r\n  ...state.chat,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\ThreadView.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\ChatInput.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\Sidebar.js",["76"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  search = () => {\r\n    this.props.socket.send(\r\n      JSON.stringify({\r\n        type: \"SEARCH\",\r\n        data: this.state.search,\r\n      })\r\n    );\r\n  };\r\n\r\n  findOrCreateThread = (id) => {\r\n    this.props.socket.send(\r\n      JSON.stringify({\r\n        type: \"FIND_THREAD\",\r\n        data: [this.props.user.id, id],\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"search-container\">\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Search..\"\r\n            value={this.state.search}\r\n            onChange={(e) => this.setState({ search: e.target.value })}\r\n          />\r\n          <button className=\"btn btn-primary\" onClick={(e) => this.search()}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        {this.state.search ? (\r\n          <ul className=\"thread-list\">\r\n            <label>Results</label>\r\n\r\n            {this.props.users &&\r\n              this.props.users\r\n                .filter((u) => u.id !== this.props.user.id)\r\n                .map((user, ui) => {\r\n                  return (\r\n                    <li key={ui}>\r\n                      <a\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          this.findOrCreateThread(user.id);\r\n                        }}\r\n                      >\r\n                        <i className=\"zmdi zmdi-account-circle\" />\r\n                        <h5>{user.name}</h5>\r\n                        <p>{user.email}</p>\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })}\r\n          </ul>\r\n        ) : (\r\n          <ul className=\"thread-list\">\r\n            <label>Message</label>\r\n            {this.props.threads.map((thread, threadIndex) => {\r\n              return (\r\n                <li>\r\n                  <Link to={`/${thread.id}`}>\r\n                    <i className=\"zmdi zmdi-account-circle\" />\r\n                    <h5>{thread.id}</h5>\r\n                    <p>This is the last message</p>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state.auth,\r\n  ...state.chat,\r\n});\r\n\r\nconst mapDispatchToProps = (dsipatch) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Sidebar));\r\n","F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\partials\\Login.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\reducers\\authReducer.js",[],"F:\\codes\\ReactProjects\\Chat-Application\\chatApp\\src\\component\\store\\reducers\\chatReducer.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":7,"column":40,"nodeType":"84","messageId":"85","endLine":7,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":12,"column":1,"nodeType":"88","endLine":19,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":50,"column":9,"nodeType":"91","messageId":"92","endLine":51,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":29,"column":55,"nodeType":"95","messageId":"96","endLine":29,"endColumn":57},{"ruleId":"97","severity":1,"message":"98","line":52,"column":23,"nodeType":"99","endLine":57,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":28,"column":44,"nodeType":"102","messageId":"103","endLine":28,"endColumn":46},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]